{"mappings":"0pBAGO,MAAMA,EAA2BC,SAASC,cAAa,UAE9DF,EAAOG,aAAY,YAAY,SAC/BF,SAASG,iBAAgB,eAAgBC,GAASA,EAAMC,mBAGxD,MAAMC,EAAa,KACfP,EAAOQ,MAAQC,OAAOC,WACtBV,EAAOW,OAASF,OAAOG,aAE3BL,IACAE,OAAOI,SAAWN,EAElBN,SAASa,KAAKC,YAAYf,GACnB,MAAMgB,EAAgChB,EAAOiB,WAAU","sources":["src/index.ts"],"sourcesContent":["\r\n// defined in here so they are global\r\n\r\nexport const canvas:HTMLCanvasElement = document.createElement(\"canvas\")\r\n// prevent dragging and right click\r\ncanvas.setAttribute('draggable', \"false\");\r\ndocument.addEventListener('contextmenu', event => event.preventDefault());\r\n// sets resolution\r\n\r\nconst setCanvasSize = ()=>{\r\n    canvas.width = window.innerWidth// || document.documentElement.clientWidth || document.body.clientWidth;\r\n    canvas.height = window.innerHeight// || document.documentElement.clientHeight|| document.body.clientHeight;\r\n}\r\nsetCanvasSize();\r\nwindow.onresize = setCanvasSize;\r\n\r\ndocument.body.appendChild(canvas);\r\nexport const ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n"],"names":["$79ef2571f038445c$export$dd37cca076be4c97","document","createElement","setAttribute","addEventListener","event","preventDefault","$79ef2571f038445c$var$setCanvasSize","width","window","innerWidth","height","innerHeight","onresize","body","appendChild","$79ef2571f038445c$export$a4ecf2d011151542","getContext"],"version":3,"file":"index.66517eb8.js.map"}